<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.silong</groupId>
    <artifactId>foundation</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>
    <description>SiLong software foundation library for java.</description>

    <developers>
        <developer>
            <id>louis2sin</id>
            <name>sin louis</name>
            <email>louis2sin@gmail.com</email>
            <organization>SiLong</organization>
            <organizationUrl>https://www.silong.com</organizationUrl>
            <roles>
                <role>owner</role>
                <role>developer</role>
            </roles>
            <timezone>+8</timezone>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/shi00/foundation.git</connection>
        <developerConnection>scm:git:git@github.com/shi00/foundation.git</developerConnection>
        <url>https://github.com/shi00/foundation</url>
    </scm>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>apache.snapshots</id>
            <name>Apache Snapshot Repository</name>
            <url>https://repository.apache.org/snapshots</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <modules>
        <module>complex-job/framework</module>
        <module>complex-job/hazelcast-database-discovery-spi</module>
        <module>duuid/idgen</module>
        <module>duuid/workerid-provider</module>
        <module>duuid/etcdv3-workerid-provider</module>
        <module>duuid/mysql-workerid-provider</module>
        <module>duuid/duuid-server</module>
        <module>voice-assistant</module>
        <module>spring-boot-starter-webflux-simpleAuth</module>
        <module>spring-boot-starter-webflux-jwt</module>
        <module>spring-boot-starter-crypto</module>
        <module>plugins/maven/etcdv3</module>
        <module>plugins/maven/mysql</module>
        <module>plugins/maven/props-writer</module>
        <module>plugins/maven/video-frame-capture</module>
        <module>utilities/random-password</module>
        <module>utilities/simple-object-pool</module>
        <module>utilities/xxhash-ffm</module>
        <module>utilities/crypto</module>
        <module>utilities/reactive-webclient</module>
        <module>utilities/rocksdb-ffm</module>
        <module>utilities/whispercpp-ffm</module>
        <module>utilities/nativelib-loader</module>
        <module>common-objects</module>
        <module>distributed-job/devastator</module>
        <module>distributed-job/bonecrusher</module>
        <module>distributed-job/mixmaster</module>
        <module>distributed-job/hook</module>
        <module>distributed-job/longhaul</module>
        <module>distributed-job/scrapper</module>
    </modules>

    <properties>
        <java.version>21</java.version>
        <surefire.useModulePath>false</surefire.useModulePath>  <!-- 模块化无需导入测试依赖 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <main.basedir>${project.basedir}</main.basedir>

        <!-- 插件 -->
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <maven-shade-plugin.version>3.5.3</maven-shade-plugin.version>
        <serviceloader-maven-plugin.version>1.4.0</serviceloader-maven-plugin.version>
        <os-maven-plugin.version>1.7.1</os-maven-plugin.version>
        <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
        <build-helper-maven-plugin.version>3.5.0</build-helper-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.4.0</maven-checkstyle-plugin.version>
        <maven-pmd-plugin.version>3.23.0</maven-pmd-plugin.version>
        <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
        <checkstyle.version>10.17.0</checkstyle.version>
        <jaxb2-maven-plugin.version>3.1.0</jaxb2-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <maven-jxr-plugin.version>3.3.2</maven-jxr-plugin.version>
        <spotbugs-maven-plugin.version>4.8.4.0</spotbugs-maven-plugin.version>
        <findsecbugs-plugin.version>1.13.0</findsecbugs-plugin.version>
        <maven-dependency-plugin.version>3.6.1</maven-dependency-plugin.version>
        <versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>
        <apache-rat-plugin.version>0.16.1</apache-rat-plugin.version>
        <maven-plugin-api.version>3.9.6</maven-plugin-api.version>
        <maven-plugin-annotations.version>3.12.0</maven-plugin-annotations.version>
        <maven-plugin-plugin.version>3.12.0</maven-plugin-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-clean-plugin.version>3.3.2</maven-clean-plugin.version>
        <maven-jar-plugin.version>3.4.1</maven-jar-plugin.version>
        <sql-maven-plugin.version>3.0.0</sql-maven-plugin.version>
        <protoc-jar-maven-plugin.version>3.11.4</protoc-jar-maven-plugin.version>
        <springdoc-openapi-maven-plugin.version>1.4</springdoc-openapi-maven-plugin.version>
        <maven-plugin-testing-harness.version>3.3.0</maven-plugin-testing-harness.version>
        <maven-site-plugin.version>4.0.0-M13</maven-site-plugin.version>
        <docker-maven-plugin.version>0.44.0</docker-maven-plugin.version>
        <maven-project-info-reports-plugin.version>3.5.0</maven-project-info-reports-plugin.version>
        <download-maven-plugin.version>1.9.0</download-maven-plugin.version>
        <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
        <extra-enforcer-rules.version>1.8.0</extra-enforcer-rules.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <native-maven-plugin.version>0.10.1</native-maven-plugin.version>
        <copy-rename-maven-plugin.version>1.0.1</copy-rename-maven-plugin.version>
        <!-- 插件 -->

        <!--开源组件-->
        <spring-boot.version>3.3.1</spring-boot.version>
        <spring-cloud.version>2023.0.3</spring-cloud.version>
        <spring-ai.version>1.0.3</spring-ai.version>
        <guava.version>33.2.1-jre</guava.version>
        <passay.version>1.6.4</passay.version>
        <zxcvbn.version>1.9.0</zxcvbn.version>
        <spotbugs.version>4.8.6</spotbugs.version>
        <disruptor.version>4.0.0</disruptor.version>
        <jctools.version>4.0.5</jctools.version>
        <jave.version>3.5.0</jave.version>
        <jetcd.version>0.8.2</jetcd.version>
        <jmh.version>1.37</jmh.version>
        <jooq.version>3.19.10</jooq.version>
        <jaxb-impl.version>4.0.3</jaxb-impl.version>
        <testcontainers.version>1.19.8</testcontainers.version>
        <springdoc.version>2.6.0</springdoc.version>
        <libphonenumber.version>8.13.41</libphonenumber.version>
        <datafaker.version>2.3.1</datafaker.version>
        <commons-io.version>2.16.1</commons-io.version>
        <commons-rng-simple.version>1.5</commons-rng-simple.version>
        <maven.version>3.9.8</maven.version>
        <plexus-utils.version>4.0.1</plexus-utils.version>
        <plexus-archiver.version>4.10.0</plexus-archiver.version>
        <cron-utils.version>9.2.1</cron-utils.version>
        <jgroups.version>5.3.9.Final</jgroups.version>
        <jgroups-raft.version>1.0.13.Final</jgroups-raft.version>
        <jgroups-kubernetes.version>2.0.2.Final</jgroups-kubernetes.version>
        <protobuf-java.version>3.25.3</protobuf-java.version>
        <rocksdbjni.version>9.4.0</rocksdbjni.version>
        <snappy-java.version>1.1.10.5</snappy-java.version>
        <zstd-jni.version>1.5.6-3</zstd-jni.version>
        <kryo.version>5.6.0</kryo.version>
        <java-jwt.version>4.4.0</java-jwt.version>
        <oshi-core.version>6.6.1</oshi-core.version>
        <mysql-connector-j.version>9.0.0</mysql-connector-j.version>
        <redisson-spring-boot-starter.version>3.32.0</redisson-spring-boot-starter.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <!--开源组件-->

        <checkstyle.skip>false</checkstyle.skip><!--checkstyle检查插件暂不支持java22，设置此标识用于各模块自行控制是否执行-->
        <pmd.skip>false</pmd.skip>  <!--pmd插件暂不支持java21,22，设置此标识用于各模块自行控制是否执行-->
        <check-dependencies.skip>false</check-dependencies.skip><!--依赖检查插件暂不支持java22，设置此标识用于各模块自行控制是否执行-->
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.springboot.ai</groupId>
                <artifactId>spring-ai-bom</artifactId>
                <version>${spring-ai.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Google's common Java library for parsing, formatting, and validating international phone numbers.  -->
            <dependency>
                <groupId>com.googlecode.libphonenumber</groupId>
                <artifactId>libphonenumber</artifactId>
                <version>${libphonenumber.version}</version>
            </dependency>
            <!-- Google's common Java library for parsing, formatting, and validating international phone numbers.  -->

            <!-- google 基础库 -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!-- google 基础库 -->

            <!-- protobuf -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf-java.version}</version>
            </dependency>
            <!-- protobuf -->

            <!-- 基于规则生成随机高强度密码 -->
            <dependency>
                <groupId>org.passay</groupId>
                <artifactId>passay</artifactId>
                <version>${passay.version}</version>
            </dependency>
            <!-- 基于规则生成随机高强度密码 -->

            <!-- 随机数据生成器，测试用 -->
            <dependency>
                <groupId>net.datafaker</groupId>
                <artifactId>datafaker</artifactId>
                <version>${datafaker.version}</version>
            </dependency>
            <!-- 随机数据生成器，测试用 -->

            <!-- 密码强度评分 -->
            <dependency>
                <groupId>com.nulab-inc</groupId>
                <artifactId>zxcvbn</artifactId>
                <version>${zxcvbn.version}</version>
            </dependency>
            <!-- 密码强度评分 -->

            <!-- 高性能队列 -->
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jctools</groupId>
                <artifactId>jctools-core</artifactId>
                <version>${jctools.version}</version>
            </dependency>
            <!-- 高性能队列 -->

            <!-- JWT -->
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>
            <!-- JWT -->

            <!-- etcd -->
            <dependency>
                <groupId>io.etcd</groupId>
                <artifactId>jetcd-core</artifactId>
                <version>${jetcd.version}</version>
            </dependency>
            <dependency>
                <groupId>io.etcd</groupId>
                <artifactId>jetcd-launcher</artifactId>
                <version>${jetcd.version}</version>
            </dependency>
            <!-- etcd -->

            <!-- redisson -->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson-spring-boot-starter.version}</version>
            </dependency>
            <!-- redisson -->

            <!-- jmh性能测试 -->
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <!-- jmh性能测试 -->

            <!-- cron工具 -->
            <dependency>
                <groupId>com.cronutils</groupId>
                <artifactId>cron-utils</artifactId>
                <version>${cron-utils.version}</version>
            </dependency>
            <!-- cron工具 -->

            <!-- 压缩工具 -->
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy-java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.luben</groupId>
                <artifactId>zstd-jni</artifactId>
                <version>${zstd-jni.version}</version>
            </dependency>
            <!-- 压缩工具 -->

            <!-- 序列化工具 -->
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>
            <!-- 序列化工具 -->

            <!-- rocksdb -->
            <dependency>
                <groupId>org.rocksdb</groupId>
                <artifactId>rocksdbjni</artifactId>
                <version>${rocksdbjni.version}</version>
            </dependency>
            <!-- rocksdb -->

            <!-- 硬件信息获取 -->
            <dependency>
                <groupId>com.github.oshi</groupId>
                <artifactId>oshi-core</artifactId>
                <version>${oshi-core.version}</version>
            </dependency>
            <!-- 硬件信息获取 -->

            <!-- 集群通信组件 -->
            <dependency>
                <groupId>org.jgroups</groupId>
                <artifactId>jgroups</artifactId>
                <version>${jgroups.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jgroups</groupId>
                <artifactId>jgroups-raft</artifactId>
                <version>${jgroups-raft.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jgroups.kubernetes</groupId>
                <artifactId>jgroups-kubernetes</artifactId>
                <version>${jgroups-kubernetes.version}</version>
            </dependency>
            <!-- 集群通信组件 -->

            <!-- 音频组件 -->
            <dependency>
                <groupId>ws.schild</groupId>
                <artifactId>jave-core</artifactId>
                <version>${jave.version}</version>
            </dependency>
            <dependency>
                <groupId>ws.schild</groupId>
                <artifactId>jave-nativebin-win64</artifactId>
                <version>${jave.version}</version>
            </dependency>
            <dependency>
                <groupId>ws.schild</groupId>
                <artifactId>jave-nativebin-linux64</artifactId>
                <version>${jave.version}</version>
            </dependency>
            <!-- 音频组件 -->

            <!-- xml解析api -->
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${jaxb-impl.version}</version>
            </dependency>
            <!-- xml解析api -->

            <!-- jdbc驱动 -->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql-connector-j.version}</version>
            </dependency>
            <!-- jdbc驱动 -->

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>

            <!-- OpenAPI -->
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <!-- openAPI -->

            <!-- spotbugs -->
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-annotations</artifactId>
                <version>${spotbugs.version}</version>
            </dependency>
            <!-- spotbugs -->

            <!-- apache -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-rng-simple</artifactId>
                <version>${commons-rng-simple.version}</version>
            </dependency>
            <!-- apache -->

            <!-- maven 插件开发-->
            <dependency>
                <groupId>org.apache.maven.plugin-testing</groupId>
                <artifactId>maven-plugin-testing-harness</artifactId>
                <version>${maven-plugin-testing-harness.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-plugin-api</artifactId>
                <version>${maven-plugin-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-core</artifactId>
                <version>${maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-artifact</artifactId>
                <version>${maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-compat</artifactId>
                <version>${maven.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-archiver</artifactId>
                <version>${plexus-archiver.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-utils</artifactId>
                <version>${plexus-utils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugin-tools</groupId>
                <artifactId>maven-plugin-annotations</artifactId>
                <version>${maven-plugin-annotations.version}</version>
            </dependency>
            <!-- maven 插件开发-->
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.googlecode.maven-download-plugin</groupId>
                    <artifactId>download-maven-plugin</artifactId>
                    <version>${download-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>${maven-plugin-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugin-tools</groupId>
                    <artifactId>maven-plugin-annotations</artifactId>
                    <version>${maven-plugin-annotations.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven</groupId>
                    <artifactId>maven-plugin-api</artifactId>
                    <version>${maven-plugin-api.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>eu.somatik.serviceloader-maven-plugin</groupId>
                    <artifactId>serviceloader-maven-plugin</artifactId>
                    <version>${serviceloader-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>kr.motd.maven</groupId>
                    <artifactId>os-maven-plugin</artifactId>
                    <version>${os-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.os72</groupId>
                    <artifactId>protoc-jar-maven-plugin</artifactId>
                    <version>${protoc-jar-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springdoc</groupId>
                    <artifactId>springdoc-openapi-maven-plugin</artifactId>
                    <version>${springdoc-openapi-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${jooq.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                    <!--                    <dependencies>-->
                    <!--                        <dependency>-->
                    <!--                            <groupId>com.xenoamess.p3c</groupId>-->
                    <!--                            <artifactId>p3c-pmd</artifactId>-->
                    <!--                            <version>${p3c-pmd.version}</version>-->
                    <!--                        </dependency>-->
                    <!--                    </dependencies>-->
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.coderplus.maven.plugins</groupId>
                    <artifactId>copy-rename-maven-plugin</artifactId>
                    <version>${copy-rename-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.experimental</groupId>
                    <artifactId>spring-aot-maven-plugin</artifactId>
                    <version>${spring-native.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <version>${sql-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.graalvm.buildtools</groupId>
                    <artifactId>native-maven-plugin</artifactId>
                    <version>${native-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-default-settings</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <!--                                <requirePluginVersions>-->
                                <!--                                    <message>Best Practice is to always define plugin versions!!!</message>-->
                                <!--                                </requirePluginVersions>-->
                                <dependencyConvergence>
                                    <excludedScopes>
                                        <scope>test</scope>
                                        <scope>provided</scope>
                                    </excludedScopes>
                                    <excludes>
                                        <exclude>io.grpc:*</exclude>
                                        <exclude>org.apache.commons:commons-compress</exclude>
                                    </excludes>
                                </dependencyConvergence>
                                <reactorModuleConvergence/>
                                <banDuplicatePomDependencyVersions/>
                            </rules>
                            <failFast>true</failFast>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                            <failFast>true</failFast>
                        </configuration>
                    </execution>
                    <execution>
                        <id>require-utf-8</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireEncoding>
                                    <encoding>UTF-8</encoding>
                                    <includes>src/main/java/**,src/test/java/**,target/generated-sources/**</includes>
                                    <acceptAsciiSubset>true</acceptAsciiSubset>
                                </requireEncoding>
                            </rules>
                            <failFast>true</failFast>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>extra-enforcer-rules</artifactId>
                        <version>${extra-enforcer-rules.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>${jaxb2-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.rat</groupId>
                <artifactId>apache-rat-plugin</artifactId>
                <version>${apache-rat-plugin.version}</version>
                <executions>
                    <execution>
                        <id>license-verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <consoleOutput>true</consoleOutput>
                    <excludes>
                        <exclude>**/zoo/**</exclude>
                        <exclude>spotbugs-security-include.xml</exclude>
                        <exclude>spotbugs-security-exclude.xml</exclude>
                        <exclude>**/*.xml</exclude>
                        <exclude>**/Dockerfile</exclude>
                        <exclude>**/.dockerignore</exclude>
                        <exclude>**/*.properties</exclude>
                        <exclude>**/*.sql</exclude>
                        <exclude>**/*.proto</exclude>
                        <exclude>**/*.ps1</exclude>
                        <exclude>**/*.bat</exclude>
                        <exclude>**/*.sh</exclude>
                        <exclude>**/*.cer</exclude>
                        <exclude>**/*.xsd</exclude>
                        <!-- Git related files -->
                        <exclude>**/.git/**</exclude>
                        <exclude>**/bindings/**</exclude>
                        <exclude>**/.mvn/**</exclude>
                        <exclude>**/.gitignore</exclude>
                        <exclude>**/.gitmodules</exclude>
                        <exclude>**/.git-blame-ignore-revs</exclude>
                        <!-- Maven related files -->
                        <exclude>**/target/**</exclude>
                        <!-- Eclipse related files -->
                        <exclude>**/.project</exclude>
                        <exclude>**/.settings/**</exclude>
                        <exclude>**/.classpath</exclude>
                        <!-- IntelliJ related files -->
                        <exclude>**/.idea/**</exclude>
                        <exclude>**/*.iml</exclude>
                        <exclude>**/*.key</exclude>
                        <exclude>**/spring.factories</exclude>
                        <!-- Runtime log -->
                        <exclude>**/*.log</exclude>
                        <exclude>**/*.zip</exclude>
                        <!-- Exclude CVS files -->
                        <exclude>**/*.cvs</exclude>
                        <!-- licenses -->
                        <exclude>licenses/*</exclude>
                        <!-- generated by Github -->
                        <exclude>**/.github/**</exclude>
                        <!-- figures -->
                        <exclude>**/.eps</exclude>
                        <exclude>**/.png</exclude>
                        <exclude>**/.jpg</exclude>
                        <exclude>**/.jpeg</exclude>
                        <!--Generated by Apache Release -->
                        <exclude>local-snapshots-dir/**</exclude>
                        <!-- JSON can't contain comments and therefore no Apache header -->
                        <exclude>*.json</exclude>
                        <exclude>*.bak</exclude>
                        <!-- json does not support comments-->
                        <exclude>**/*.json</exclude>
                        <!-- Java SPI uses files in resources/META-INF/services-->
                        <exclude>**/resources/META-INF/services/**</exclude>
                        <exclude>**/test/resources/**</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>check-dependencies</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <skip>${check-dependencies.skip}</skip>
                            <failOnWarning>false</failOnWarning>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <skip>${checkstyle.skip}</skip>
                    <includeTestSourceDirectory>false</includeTestSourceDirectory>
                    <configLocation>google_checks.xml</configLocation>
                    <consoleOutput>true</consoleOutput>
                    <violationSeverity>error</violationSeverity>
                    <failOnViolation>true</failOnViolation>
                    <excludes>
                        **/generated/**/*
                    </excludes>
                    <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <printFailingErrors>true</printFailingErrors>
                    <includeTests>false</includeTests>
                    <!--                    <language>java</language>-->
                    <failOnViolation>false</failOnViolation>
                    <skip>${pmd.skip}</skip>
                    <targetJdk>${java.version}</targetJdk>
                    <!--                    <rulesets>-->
                    <!--                        &lt;!&ndash; A rule set, that comes bundled with PMD &ndash;&gt;-->
                    <!--                        <ruleset>rulesets/java/ali-set.xml</ruleset>-->
                    <!--                        <ruleset>rulesets/java/ali-other.xml</ruleset>-->
                    <!--                        <ruleset>rulesets/java/ali-orm.xml</ruleset>-->
                    <!--                        <ruleset>rulesets/java/ali-constant.xml</ruleset>-->
                    <!--                        <ruleset>rulesets/java/ali-oop.xml</ruleset>-->
                    <!--                        <ruleset>rulesets/java/ali-naming.xml</ruleset>-->
                    <!--                        <ruleset>rulesets/java/ali-exception.xml</ruleset>-->
                    <!--                        <ruleset>rulesets/java/ali-comment.xml</ruleset>-->
                    <!--                        <ruleset>rulesets/java/ali-concurrent.xml</ruleset>-->
                    <!--                        <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>-->
                    <!--                        &lt;!&ndash; Custom local file system rule set &ndash;&gt;-->
                    <!--                        <ruleset>d:\rulesets\strings.xml</ruleset>-->
                    <!--                        &lt;!&ndash; Custom remote rule set accessed via a URL &ndash;&gt;-->
                    <!--                        <ruleset>http://localhost/design.xml</ruleset>-->
                    <!--                    </rulesets>-->
                    <excludeRoots>
                        <excludeRoot>target/generated-sources</excludeRoot>
                        <excludeRoot>target/generated-test-sources</excludeRoot>
                    </excludeRoots>
                    <excludes>
                        <exclude>**/generated/*.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <!-- 绑定pmd:check到verify生命周期 -->
                    <execution>
                        <id>pmd-check-verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <!-- 绑定pmd:pmd到site生命周期 -->
                    <execution>
                        <id>pmd-pmd-site</id>
                        <phase>site</phase>
                        <goals>
                            <goal>pmd</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- findbugs继承者 -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>check</id>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeFilterFile>${main.basedir}/spotbugs-security-include.xml</includeFilterFile>
                    <excludeFilterFile>${main.basedir}/spotbugs-security-exclude.xml</excludeFilterFile>
                    <failOnError>true</failOnError>
                    <effort>Low</effort>
                    <threshold>Medium</threshold>
                    <includeTests>false</includeTests>
                    <plugins>
                        <plugin>
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>${findsecbugs-plugin.version}</version>
                        </plugin>
                    </plugins>
                </configuration>
                <dependencies>
                    <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>${spotbugs.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- findbugs继承者 -->
            <!--检测代码覆盖率的插件jacoco-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <!-- The Executions required by unit tests are omitted. -->
                    <!--
                       Prepares the property pointing to the JaCoCo runtime agent which
                       is passed as VM argument when Maven the Failsafe plugin is executed.
                   -->
                    <execution>
                        <id>prepare-agent</id>
                        <!--                        <phase>pre-integration-test</phase>-->
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${project.build.directory}/jacoco.exec</destFile>
                            <!--
                               Sets the name of the property containing the settings
                               for JaCoCo runtime agent.
                           -->
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <!--
                            在程序的verify阶段，执行report测试的程序。
                            文件的输入为perpare-agent阶段中设置或者默认的jacoco.exec.
                            参数 includes和excludes可用来选定report中过滤的类。
                            -->
                    <execution>
                        <id>default-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>

                <!--这个配置规则会影响编译结果，一般也不会要求这么严格，可以把他注释掉-->
                <configuration>
                    <!-- rules里面指定覆盖规则 -->
                    <rules>
                        <!--                        <rule implementation="org.jacoco.maven.RuleConfiguration">-->
                        <!--                            <element>BUNDLE</element>-->
                        <!--                            <limits>-->
                        <!--                                &lt;!&ndash; 指定方法覆盖到80% &ndash;&gt;-->
                        <!--                                <limit implementation="org.jacoco.report.check.Limit">-->
                        <!--                                    <counter>METHOD</counter>-->
                        <!--                                    <value>COVEREDRATIO</value>-->
                        <!--                                    <minimum>0.80</minimum>-->
                        <!--                                </limit>-->
                        <!--                                &lt;!&ndash; 指定指令覆盖到80% &ndash;&gt;-->
                        <!--                                <limit implementation="org.jacoco.report.check.Limit">-->
                        <!--                                    <counter>INSTRUCTION</counter>-->
                        <!--                                    <value>COVEREDRATIO</value>-->
                        <!--                                    <minimum>0.80</minimum>-->
                        <!--                                </limit>-->
                        <!--                                &lt;!&ndash; 指定行覆盖到80% &ndash;&gt;-->
                        <!--                                <limit implementation="org.jacoco.report.check.Limit">-->
                        <!--                                    <counter>LINE</counter>-->
                        <!--                                    <value>COVEREDRATIO</value>-->
                        <!--                                    <minimum>0.80</minimum>-->
                        <!--                                </limit>-->
                        <!--                                &lt;!&ndash; 指定类覆盖到100%，不能遗失任何类 &ndash;&gt;-->
                        <!--                                <limit implementation="org.jacoco.report.check.Limit">-->
                        <!--                                    <counter>CLASS</counter>-->
                        <!--                                    <value>MISSEDCOUNT</value>-->
                        <!--                                    <maximum>0</maximum>-->
                        <!--                                </limit>-->
                        <!--                            </limits>-->
                        <!--                        </rule>-->
                    </rules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkCount>1</forkCount>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <argLine>--enable-preview ${surefireArgLine}</argLine>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Excludes integration tests when unit tests are run. -->
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <!--
                        Ensures that both integration-test and verify goals of the Failsafe Maven
                        plugin are executed.
                    -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the VM argument line used when integration tests are run. -->
                            <argLine>${failsafeArgLine}</argLine>
                            <!--
                                Skips integration tests if the value of skip.integration.tests property
                                is true
                            -->
                            <skipTests>${skip.integration.tests}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin.version}</version>
            </plugin>
        </plugins>
    </build>
    <!-- 用于生成错误到代码内容的链接 -->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven-jxr-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>licenses</report>
                            <report>dependency-info</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>