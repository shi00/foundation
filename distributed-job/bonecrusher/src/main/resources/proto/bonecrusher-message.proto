syntax = "proto3";

package djs;
option java_package = "com.silong.foundation.dj.bonecrusher.message";
option java_outer_classname = "Messages";

//////////////////////////////////////////////////////////

//请求
message Request {
  Type type = 1; //请求类型
  string token = 2; //鉴权令牌
  string uuid = 3; //请求Uuid
  int64 timestamp = 4; //时间戳
  oneof body{
    SyncDataReq sync_data = 5; // 数据同步请求
    LoadingClassReq loading_class = 6; // 类加载请求
    HandShake hand_shake = 7; //握手消息
  }
}

//握手消息请求
message HandShake {
  bytes self_uuid = 1; // 集群成员自己在集群内的uuid
}

//加载类请求
message LoadingClassReq{
  string class_fqdn = 1; //类加载器加载的全限定名
}

//数据同步请求
message SyncDataReq {
  string partition_no = 1; // 需要同步的分区编号
}

//响应头
message ResponseHeader {
  Type type = 1; //响应类型
  string uuid = 2; //请求uuid，标识那个请求的响应
  int64 timestamp = 3; //时间戳
  oneof body {
    Result result = 4;  //结果
    DataBlockMetadata data_block_metadata = 5; //数据块
    HandShake hand_shake = 6; //握手消息
  }
}

//数据块元数据
message DataBlockMetadata {
  optional string data_uuid = 1; //文件名或类fqdn
  optional uint32 total_blocks = 2; //数据块总数
  optional uint32 block_no = 3; //当前数据块编号，从0开始计数
  optional uint32 block_size = 4;//数据分块大小
}

// 响应结果
message Result
{
  uint32 code = 1; //结果码
  optional string desc = 2; //结果描述
}

// 消息类型枚举
enum Type{
  LOADING_CLASS_REQ = 0; //类加载请求
  LOADING_CLASS_RESP = 1; //类加载响应
  DATA_SYNC_REQ = 2; //数据同步请求
  DATA_SYNC_RESP = 3; //数据同步响应
  AUTHENTICATION_FAILED_RESP = 4; //鉴权失败
  HAND_SHAKE_REQ = 5; //握手消息请求
  HAND_SHAKE_RESP = 6; //握手消息响应
}