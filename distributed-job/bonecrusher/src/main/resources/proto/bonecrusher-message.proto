syntax = "proto3";

package djs;
option java_package = "com.silong.foundation.dj.bonecrusher.message";
option java_outer_classname = "Messages";

//////////////////////////////////////////////////////////

//请求
message Request {
  Type type = 1; //请求类型
  oneof body{
    LoadingClassReq loading_class = 2; // 类加载请求
    LoginReq  login = 3; //登录请求
    SyncDataReq sync_data = 4; // 数据同步请求
  }
}

//响应
message Response {
  Type type = 1; //响应类型
  oneof body{
    LoadingClassResp loading_class = 2; // 类加载响应
    LoginResp login = 3; //响应结果
    SyncDataResp sync_data = 4 ; //数据同步
  }
}


//登录请求
message LoginReq{
  string token = 1; //访问令牌
  string generator = 2;//token生成者
}

//登录响应
message LoginResp{
  Result result = 1; //响应结果
}

//加载类请求
message LoadingClassReq{
  string class_fqdn = 1; //类加载器加载的全限定名
}

//加载类响应
message LoadingClassResp{
  Result result = 1; //结果
  optional DataBlock data_block = 2 ; //数据块
}

//数据同步请求
message SyncDataReq {
  string partitionNo = 1; // 需要同步的分区编号
}

//数据响应
message SyncDataResp {
  Result result = 1; //响应结果
  DataBlock data_block = 2 ; //数据块
}

//数据块
message DataBlock {
  optional uint32 block_size = 2; //数据块大小，单位：KB
  optional uint32 total_block = 3; //数据块总数
  optional uint32 block_no = 4; //当前数据块编号，从0开始计数
  optional bytes data = 5; //数据块
  optional string block_signature = 6; //当前数据块签名
  optional string integrated_signature = 7; //完整数据签名
}

// 响应结果
message Result
{
  uint32 code = 1; //结果码
  optional string desc = 2; //结果描述
}

// 消息类型枚举
enum Type{
  LOADING_CLASS_REQ = 0; //类加载请求
  LOADING_CLASS_RESP = 1; //类加载响应
  LOGIN_REQ = 2; //登录请求
  LOGIN_RESP = 3; //登录响应
  DATA_SYNC_REQ = 4; //数据同步请求
  DATA_SYNC_RESP = 5; //数据同步响应
}